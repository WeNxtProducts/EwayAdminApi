package com.maan.eway.notif.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.error.Error;
import com.maan.eway.notif.req.MailMasterGetReq;
import com.maan.eway.notif.req.MailMasterSaveReq;
import com.maan.eway.notif.res.MailMasterGetRes;
import com.maan.eway.notif.service.MailMasterService;
import com.maan.eway.req.CommonErrorModuleReq;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>CityMasterController</h2>
*/
@RestController
@RequestMapping("/master")
@Api(tags = "MASTER : Mail Master ", description = "API's")
public class MailMasterController {

	@Autowired	private  MailMasterService mailService;
	
	@Autowired
	private  PrintReqService reqPrinter;
	
	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;
	
	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/insertmailmaster")
		@ApiOperation(value = "This method is to Insert Mail Master ")
		public ResponseEntity<CommonRes> insertmailmaster(@RequestBody MailMasterSaveReq req) {

			reqPrinter.reqPrint(req);
			CommonRes data = new CommonRes();
			List<String> validationCodes = mailService.validatemailmaster(req);
			List<Error> validation = null;
			if(validationCodes!=null && validationCodes.size() > 0 ) {
				CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
				comErrDescReq.setBranchCode(req.getBranchCode());
				comErrDescReq.setInsuranceId(req.getCompanyId());
				comErrDescReq.setProductId("99999");
				comErrDescReq.setModuleId("31");
				comErrDescReq.setModuleName("MASTERS");
				
				validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
			}
			

			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				// Get All
				SuccessRes res = mailService.insertmailmaster(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}

		}
		
			
		// Get Mail Id
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/getbyid")
		@ApiOperation("This Method is to get by id")
		public ResponseEntity<CommonRes> getById(@RequestBody MailMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		MailMasterGetRes res = mailService.getById(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
				
	}
