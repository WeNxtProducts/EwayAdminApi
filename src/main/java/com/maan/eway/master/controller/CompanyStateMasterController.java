package com.maan.eway.master.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.error.Error;
import com.maan.eway.master.req.CompanyStateMasterChangeStatusReq;
import com.maan.eway.master.req.CompanyStateMasterDropDownReq;
import com.maan.eway.master.req.CompanyStateMasterGetAllReq;
import com.maan.eway.master.req.CompanyStateMasterGetReq;
import com.maan.eway.master.req.CompanyStateMasterSaveReq;
import com.maan.eway.master.req.CompanyStateMultiInsertReq;
import com.maan.eway.master.req.CompanyStateNonSelectedReq;
import com.maan.eway.master.res.CompanyStateMasterRes;
import com.maan.eway.master.service.CompanyStateMasterService;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>StateMasterController</h2>
*/
@RestController
@RequestMapping("/master")
@Api(tags = "1.COMPANY CONFIG : Company State Master ", description = "API's")
public class CompanyStateMasterController {

	@Autowired
	private  CompanyStateMasterService service;
	
	@Autowired
	private  PrintReqService reqPrinter;
	/*
	// save
	@PostMapping("/insertcompanystate")
	@ApiOperation(value = "This method is Insert Company State Details")
	public ResponseEntity<CommonRes> insertCompanyState(@RequestBody List<CompanyStateMultiInsertReq> req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		List<Error> validation = service.validateCompanyStateDetails(req);
		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Save
			SuccessRes res = service.insertCompanyState(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}
	
	// Update
	@PostMapping("/updatecompanystate")
	@ApiOperation(value = "This method is Insert Company State Details")
	public ResponseEntity<CommonRes> updateCompanyState(@RequestBody CompanyStateMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		List<Error> validation = service.validateUpdateCompanyStateDetails(req);
		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Save
			SuccessRes res = service.updateCompanyState(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}



		//  Get All
		
		@PostMapping("/getallcompanystatedetails")
		@ApiOperation("This method is getall Company State Details")
		public ResponseEntity<CommonRes> getallCompanyStateDetails(@RequestBody CompanyStateMasterGetAllReq req)
		{
			CommonRes data = new CommonRes();
			reqPrinter.reqPrint(req);
			
			List<CompanyStateMasterRes> res = service.getallCompanyStateDetails(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		
	//  Get Active  
		
			@PostMapping("/getactivecompanystate")
			@ApiOperation("This method is get Active Company State Details")
			public ResponseEntity<CommonRes> getActiveCompanyStateDetails(@RequestBody CompanyStateMasterGetAllReq req)
			{
				CommonRes data = new CommonRes();
				reqPrinter.reqPrint(req);
				
				List<CompanyStateMasterRes> res = service.getActiveCompanyStateDetails(req);
				data.setCommonResponse(res);
				data.setErrorMessage(Collections.emptyList());
				data.setIsError(false);
				data.setMessage("Success");
				
				if(res!= null) {
					return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
				}
				else {
					return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
				}
			}
		
		// Get By Id
		
		@PostMapping("/getbycompanystateid")
		@ApiOperation("This Method is to get  Company State id")
		public ResponseEntity<CommonRes> getByCompanyStateId(@RequestBody CompanyStateMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		CompanyStateMasterRes res = service.getByCompanyStateId(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
		
		//  Drop Down
		@PostMapping("/dropdown/companystate")
		@ApiOperation(value = "This method is get Company State Master Drop Down")

		public ResponseEntity<CommonRes> getCompanyStateMasterDropdown(@RequestBody CompanyStateMasterDropDownReq req) {

			CommonRes data = new CommonRes();

			// Save
			List<DropDownRes> res = service.getCompanyStateMasterDropdown(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
		//Non Selected
		@PostMapping("/getallnonselectedcompanystate")
		@ApiOperation("This method is getall Company State Details")
		public ResponseEntity<CommonRes> getallNonSelectedCompanyState(@RequestBody CompanyStateNonSelectedReq req)
		{
			CommonRes data = new CommonRes();
			reqPrinter.reqPrint(req);
			
			List<CompanyStateMasterRes> res = service.getallNonSelectedCompanyState(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		//Change Status
		@PostMapping("/companystate/changestatus")
		@ApiOperation(value = "This method is get Company State Master Status Change")

		public ResponseEntity<CommonRes> changeStatusOfCompanyStateMaster(@RequestBody CompanyStateMasterChangeStatusReq req) {

			CommonRes data = new CommonRes();
			// Change Status
			SuccessRes res = service.changeStatusOfCompanyStateMaster(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}	*/

}
