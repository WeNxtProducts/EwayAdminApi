/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-09-02 ( Date ISO 2022-09-02 - Time 18:14:51 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.EmiMasterChangeStatusReq;
import com.maan.eway.master.req.EmiMasterGetAllReq;
import com.maan.eway.master.req.EmiMasterGetReq;
import com.maan.eway.master.req.EmiMasterSaveReq;
import com.maan.eway.master.res.EmiMasterRes;
import com.maan.eway.master.service.EmiMasterService;
import com.maan.eway.req.CommonErrorModuleReq;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>EmiMasterController</h2>
*/
@RestController
@RequestMapping("/master")
@Api(tags = "1. GLOBAL CONFIG : Emi Master ", description = "API's")
public class EmiMasterController {

	@Autowired
	private  EmiMasterService service;
	@Autowired
	private  PrintReqService reqPrinter;
	
	
	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;
	
	// save
	@PreAuthorize("hasAnyRole('ROLE_ADMIN')")
		@PostMapping("/insertemi")
		@ApiOperation(value = "This method is Insert Emi Details")
		public ResponseEntity<CommonRes> insertEmi(@RequestBody EmiMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<String> validationCodes = service.validateEmiDetails(req);
		List<Error> validation = null;
		if(validationCodes!=null && validationCodes.size() > 0 ) {
			CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
			comErrDescReq.setBranchCode("99999");
			comErrDescReq.setInsuranceId(req.getCompanyId());
			comErrDescReq.setProductId("99999");
			comErrDescReq.setModuleId("31");
			comErrDescReq.setModuleName("MASTERS");
			
			validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
		}

	
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				// Save
				SuccessRes res = service.insertEmi(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}

		}
		
		//  Get All Emi Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
		@PostMapping("/getallemidetails")
		@ApiOperation("This method is getall Emi Details")
		public ResponseEntity<CommonRes> getallEmiDetails(@RequestBody EmiMasterGetAllReq req)
		{
			CommonRes data = new CommonRes();
			
			
			List<EmiMasterRes> res = service.getallEmiDetails(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		
	//  Get Active Emi Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
			@PostMapping("/getactiveemi")
			@ApiOperation("This method is get Active Emi Details")
			public ResponseEntity<CommonRes> getActiveEmiDetails(@RequestBody EmiMasterGetAllReq req)
			{
				CommonRes data = new CommonRes();
				
				List<EmiMasterRes> res = service.getActiveEmiDetails(req);
				data.setCommonResponse(res);
				data.setErrorMessage(Collections.emptyList());
				data.setIsError(false);
				data.setMessage("Success");
				
				if(res!= null) {
					return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
				}
				else {
					return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
				}
			}
		
		// Get By Emi Id
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
		@PostMapping("/getbyemiid")
		@ApiOperation("This Method is to get by Emi id")
		public ResponseEntity<CommonRes> getByEmiId(@RequestBody EmiMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		EmiMasterRes res = service.getByEmiId(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
	
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
		@PostMapping("/emi/changestatus")
		@ApiOperation(value = "This method is get Change Status of Emis")
		public ResponseEntity<CommonRes> changeStatusOfEmi(@RequestBody EmiMasterChangeStatusReq req) {

			CommonRes data = new CommonRes();
			// Change Status
			SuccessRes res = service.changeStatusOfProduct(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}


}
