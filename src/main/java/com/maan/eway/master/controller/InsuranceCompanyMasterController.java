/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:27 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;




import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.CompanyChangeStatusReq;
import com.maan.eway.master.req.CompanyDropDownReq;
import com.maan.eway.master.req.InsuranceCompanyMasterGetAllReq;
import com.maan.eway.master.req.InsuranceCompanyMasterGetReq;
import com.maan.eway.master.req.InsuranceCompanyMasterSaveReq;
import com.maan.eway.master.req.SuperAdminDropDownReq;
import com.maan.eway.master.res.InsuranceCompanyMasterRes;
import com.maan.eway.master.service.InsuranceCompanyMasterService;
import com.maan.eway.req.CommonErrorModuleReq;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.DropdownCommonRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;
import java.util.*;
import java.util.stream.Collectors;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>InsuranceCompanyMasterController</h2>
*/
@RestController
@Api(  tags="2. COMPANY CONFIG : Company Master ", description = "API's")
@RequestMapping("/master")
public class InsuranceCompanyMasterController {

	@Autowired
	private  InsuranceCompanyMasterService insService;

	@Autowired
	private PrintReqService reqPrinter;
	
	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;
/*
	private static final String ENTITY_TITLE = "InsuranceCompanyMaster";


 	public InsuranceCompanyMasterController (InsuranceCompanyMasterService entityService) {
		this.entityService = entityService;
	}
*/

	//Insert or Update Insurance Company Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
	@PostMapping("/savecompany")
	@ApiOperation(value = "This method is Insert Company Details")
	public ResponseEntity<CommonRes> createInsuranceCompanyMaster(@RequestBody  InsuranceCompanyMasterSaveReq req) {
		
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<String> validationCodes = insService.validateCompanySaveReq(req);
		List<Error> validation = null;
		
		
		
		if(validationCodes!=null && validationCodes.size() > 0 ) {
			CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
			comErrDescReq.setBranchCode("99999");
			comErrDescReq.setInsuranceId(req.getInsuranceId()==null?"99999":req.getInsuranceId());
			comErrDescReq.setProductId("99999");
			comErrDescReq.setModuleId("31");
			comErrDescReq.setModuleName("MASTERS");
			
			validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
			{
				//Remove Duplicate ErrorCode Entry.
			validation = validation.stream().collect(Collectors.collectingAndThen(Collectors.toMap(Error::getCode, e -> e, (existing, replacement) -> existing),
		     map -> new ArrayList<>(map.values())));
			}
		    }
	//// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {
			/////// save

			SuccessRes res = insService.saveCompanyDetails(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}
	
	
//  Get All Insurance Company Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
		@PostMapping("/getallinscompanydetails")
		@ApiOperation("This method is getall  Company Details")
		public ResponseEntity<CommonRes> getallInsCompanyDetails(@RequestBody InsuranceCompanyMasterGetAllReq req)
		{
			CommonRes data = new CommonRes();
			reqPrinter.reqPrint(req);
			
			List<InsuranceCompanyMasterRes> res = insService.getallInsCompanyDetails(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		
	//  Get Active Insurance Company Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
			@PostMapping("/getactiveinscompany")
			@ApiOperation("This method is get Active  Company Details")
			public ResponseEntity<CommonRes> getActiveInsCompanyDetails(@RequestBody InsuranceCompanyMasterGetAllReq req)
			{
				CommonRes data = new CommonRes();
				reqPrinter.reqPrint(req);
				
				List<InsuranceCompanyMasterRes> res = insService.getActiveInsCompanyDetails(req);
				data.setCommonResponse(res);
				data.setErrorMessage(Collections.emptyList());
				data.setIsError(false);
				data.setMessage("Success");
				
				if(res!= null) {
					return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
				}
				else {
					return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
				}
			}
		
		// Get By Insurance Company Id
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
		@PostMapping("/getbycompanyid")
		@ApiOperation("This Method is to get by Company id")
		public ResponseEntity<CommonRes> getByCompanyId(@RequestBody InsuranceCompanyMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		InsuranceCompanyMasterRes res = insService.getByCompanyId(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
		
	// Insurance Company Master Drop Down Type
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
		@PostMapping(value="/dropdown/company",produces = "application/json")
		@ApiOperation(value = "This method is get Company Master Drop Down")

		public ResponseEntity<DropdownCommonRes> getInscompanyMasterDropdown( @RequestBody CompanyDropDownReq req ) {

			DropdownCommonRes data = new DropdownCommonRes();

			// Save
			List<DropDownRes> res = insService.getInscompanyMasterDropdown(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}

	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
		@PostMapping("/company/changestatus")
		@ApiOperation(value = "This method is get Company Change Status")
		public ResponseEntity<CommonRes> changeStatusOfCompany(@RequestBody CompanyChangeStatusReq req) {

			CommonRes data = new CommonRes();
			// Change Status
			SuccessRes res = insService.changeStatusOfCompany(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
	
	
	// Insurance Company Master Drop Down Type
		@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
			@PostMapping(value="/dropdown/superadmincompanies",produces = "application/json")
			@ApiOperation(value = "This method is get Company Master Drop Down")

			public ResponseEntity<DropdownCommonRes> getSuperAdminCompanies( @RequestBody SuperAdminDropDownReq req ) {

				DropdownCommonRes data = new DropdownCommonRes();

				// Save
				List<DropDownRes> res = insService.getSuperAdminCompanies(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}

			}
}
