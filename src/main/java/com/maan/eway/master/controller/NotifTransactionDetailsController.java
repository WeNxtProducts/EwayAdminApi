/*
*  Copyright (c) 2019. All right reserved
* Created on 2023-01-11 ( Date ISO 2023-01-11 - Time 13:27:46 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import com.maan.eway.bean.NotifTransactionDetails;
import com.maan.eway.master.service.NotifTransactionDetailsService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import java.util.List;


/**
* <h2>NotifTransactionDetailsController</h2>
*/
@RestController
@RequestMapping("/api")
public class NotifTransactionDetailsController {

	@Autowired
	private  NotifTransactionDetailsService entityService;

/*
	private static final String ENTITY_TITLE = "NotifTransactionDetails";


 	public NotifTransactionDetailsController (NotifTransactionDetailsService entityService) {
		this.entityService = entityService;
	}
*/
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
	@PostMapping(value = "/notiftransactiondetails")
	public ResponseEntity<NotifTransactionDetails> createNotifTransactionDetails(@RequestBody  NotifTransactionDetails model) {

   		 NotifTransactionDetails data = entityService.create(model);
    		if (data != null) {
    			return new ResponseEntity<>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }

	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER')")
    @GetMapping(value = "/notiftransactiondetails")
    public ResponseEntity<List<NotifTransactionDetails>> getAllNotifTransactionDetails() {
        List<NotifTransactionDetails> lst = entityService.getAll();

        return new ResponseEntity<>(lst,HttpStatus.OK);
    }
/*
        @GetMapping(value = "/notiftransactiondetails/{id}")
    public ResponseEntity<NotifTransactionDetails> getOneNotifTransactionDetails(@PathVariable("id") long id) {

            NotifTransactionDetails e = entityService.getOne(id);
            if (e == null) {
            	return new ResponseEntity<>(null,HttpStatus.NOT_FOUND);
            }
            return new ResponseEntity<>(e, HttpStatus.OK);
    }

*/

}
