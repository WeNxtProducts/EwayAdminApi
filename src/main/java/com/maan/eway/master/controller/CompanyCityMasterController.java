package com.maan.eway.master.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.error.Error;
import com.maan.eway.master.req.CompanyCityChangeStatusReq;
import com.maan.eway.master.req.CompanyCityMasterDropDownReq;
import com.maan.eway.master.req.CompanyCityMasterGetAllReq;
import com.maan.eway.master.req.CompanyCityMasterGetReq;
import com.maan.eway.master.req.CompanyCityMasterMultiInsertSaveReq;
import com.maan.eway.master.req.CompanyCityMasterSaveReq;
import com.maan.eway.master.req.CompanyCityNonSelectedReq;
import com.maan.eway.master.res.CompanyCityMasterRes;
import com.maan.eway.master.service.CompanyCityMasterService;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>CityMasterController</h2>
*/
@RestController
@RequestMapping("/master")
@Api(tags = "MASTER :Company City Master ", description = "API's")
public class CompanyCityMasterController {

	@Autowired
	private  CompanyCityMasterService cityService;
	
	@Autowired
	private  PrintReqService reqPrinter;
	/*
	// save
		@PostMapping("/updatecompanycity")
		@ApiOperation(value = "This method is Insert Company City Details")
		public ResponseEntity<CommonRes> updateCity(@RequestBody CompanyCityMasterSaveReq req) {

			reqPrinter.reqPrint(req);
			CommonRes data = new CommonRes();

			List<Error> validation = cityService.validateUpdateCityDetails(req);
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				// Get All
				SuccessRes res = cityService.updateCity(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}

		}

		
		@PostMapping("/insertcompanycity")
		@ApiOperation(value = "This method is Insert Company City Details")
		public ResponseEntity<CommonRes> insertCity(@RequestBody List<CompanyCityMasterMultiInsertSaveReq> req) {

			reqPrinter.reqPrint(req);
			CommonRes data = new CommonRes();

			List<Error> validation = cityService.validateCityDetails(req);
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				// Get All
				SuccessRes res = cityService.insertCity(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}

		}

		
		//  Get All City Master
		
		@PostMapping("/getallcompanycitydetails")
		@ApiOperation("This method is getall Company City Details")
		public ResponseEntity<CommonRes> getallCityDetails(@RequestBody CompanyCityMasterGetAllReq req)
		{
			CommonRes data = new CommonRes();
			reqPrinter.reqPrint(req);
			
			List<CompanyCityMasterRes> res = cityService.getallCityDetails(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		
	//  Get Active Referral Master
		
			@PostMapping("/getactivecompanycity")
			@ApiOperation("This method is get Active Company City Details")
			public ResponseEntity<CommonRes> getActiveCityDetails(@RequestBody CompanyCityMasterGetAllReq req)
			{
				CommonRes data = new CommonRes();
				reqPrinter.reqPrint(req);
				
				List<CompanyCityMasterRes> res = cityService.getActiveCityDetails(req);
				data.setCommonResponse(res);
				data.setErrorMessage(Collections.emptyList());
				data.setIsError(false);
				data.setMessage("Success");
				
				if(res!= null) {
					return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
				}
				else {
					return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
				}
			}
		
		// Get By City Id
		
		@PostMapping("/getbycompanycityid")
		@ApiOperation("This Method is to get by City id")
		public ResponseEntity<CommonRes> getByCityId(@RequestBody CompanyCityMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		CompanyCityMasterRes res = cityService.getByCityId(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
		
		// City Master Drop Down Type
		@PostMapping("/dropdown/companycity")
		@ApiOperation(value = "This method is get Company City Master Drop Down")

		public ResponseEntity<CommonRes> getCityMasterDropdown(@RequestBody CompanyCityMasterDropDownReq req) {

			CommonRes data = new CommonRes();

			List<Error> validation = cityService.validateDropdownGet(req);
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				
				List<DropDownRes> res = cityService.getCityMasterDropdown(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}

			}
		}
		
		@PostMapping("/dropdown/companycities")
		@ApiOperation(value = "This method is get Company City Master Drop Down")

		public ResponseEntity<CommonRes> getCompanyCityDropdown(@RequestBody CompanyCityMasterDropDownReq req) {

			CommonRes data = new CommonRes();

			List<Error> validation = cityService.validateCompanyCity(req);
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				
				List<DropDownRes> res = cityService.getCompanyCityDropdown(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}

			}
		}
	
		@PostMapping("/companycity/changestatus")
		@ApiOperation(value = "This method is get Company City Change Status")
		public ResponseEntity<CommonRes> changeStatusOfCity(@RequestBody CompanyCityChangeStatusReq req) {

			CommonRes data = new CommonRes();
			// Change Status
			SuccessRes res = cityService.changeStatusOfCity(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
		
		//Non Selected
				@PostMapping("/getallnonselectedcompanycity")
				@ApiOperation("This method is getall Company City Details")
				public ResponseEntity<CommonRes> getallNonSelectedCompanyCity(@RequestBody CompanyCityNonSelectedReq req)
				{
					CommonRes data = new CommonRes();
					reqPrinter.reqPrint(req);
					
					List<CompanyCityMasterRes> res = cityService.getallNonSelectedCompanyState(req);
					data.setCommonResponse(res);
					data.setErrorMessage(Collections.emptyList());
					data.setIsError(false);
					data.setMessage("Success");
					
					if(res!= null) {
						return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
					}
					else {
						return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
					}
				} */
}
