package com.maan.eway.master.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;



import com.maan.eway.master.req.PremiaDropDownReq;
import com.maan.eway.master.res.PremiaCustomerDetailsRes;
import com.maan.eway.master.service.PremiaCustomerDetailsService;
import com.maan.eway.res.BrokerCustCodeRes;
import com.maan.eway.res.CommonRes;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


@RestController
@RequestMapping("/api")
@Api(tags = "ADMIN :Premia Customer Details  ", description = "API's")
public class PremiaCustomerDetailsController {

	@Autowired
	private  PremiaCustomerDetailsService service;
	
	@Autowired
	private PrintReqService reqPrinter;
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/search/premiacustomercode")
	@ApiOperation(value = "This method is Search Premia ")

	public ResponseEntity<CommonRes> searchPremiacustDetails(@RequestBody  PremiaDropDownReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		// Search
		List<PremiaCustomerDetailsRes> res = service.searchPremiacustDetails(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/search/premiasourcecode")
	@ApiOperation(value = "This method is Search Premia ")

	public ResponseEntity<CommonRes> searchPremiaSourceCode(@RequestBody  PremiaDropDownReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		// Search
		List<PremiaCustomerDetailsRes> res = service.searchPremiaSourceCode(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/brokerbranches")
	@ApiOperation(value = "This method is Search Premia ")

	public ResponseEntity<CommonRes> getBrokerBranches(@RequestBody  PremiaDropDownReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		// Search
		List<BrokerCustCodeRes> res = service.getBrokerBranches(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
	
	
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
	@PostMapping("/search/premiabrokercustomercode")
	@ApiOperation(value = "This method is Search Premia ")

	public ResponseEntity<CommonRes> searchPremiaBrokerCustomerCode(@RequestBody  PremiaDropDownReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		// Search
		List<PremiaCustomerDetailsRes> res = service.searchPremiaBrokerCustomerCode(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
}
