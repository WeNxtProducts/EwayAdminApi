/*
 * Java domain class for entity "EserviceMotorDetailsRaw" 
 * Created on 2023-05-11 ( Date ISO 2023-05-11 - Time 16:43:49 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
 
 /*
 * Created on 2023-05-11 ( 16:43:49 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.eway.batch.repository;

import java.util.List;
import java.util.Map;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.ctc.wstx.shaded.msv_core.datatype.SerializationContext;
import com.maan.eway.batch.entity.EserviceMotorDetailsRaw;
import com.maan.eway.batch.entity.EserviceMotorDetailsRawId;

import jakarta.transaction.Transactional;
 
 
 
/**
 * @author MAANSAROVAR04
 *
 */
@Repository
public interface EserviceMotorDetailsRawRepository  extends JpaRepository<EserviceMotorDetailsRaw,EserviceMotorDetailsRawId > , JpaSpecificationExecutor<EserviceMotorDetailsRaw>{

	List<EserviceMotorDetailsRaw> findByRequestReferenceNo(String requestReferenceNo);
	
	Page<EserviceMotorDetailsRaw> findByRequestReferenceNoAndSnoBetween(String tranId ,Integer start, Integer end,PageRequest page);

	Page<EserviceMotorDetailsRaw> findByRequestReferenceNoAndStatusNotAndSnoBetween(String tranId ,String error_status,Integer start, Integer end,PageRequest page);

	
	@Modifying
	@Transactional
	//@Query(value ="UPDATE eservice_motor_details_raw ra SET INSURANCE_TYPE_ID =( SELECT SECTION_ID FROM Product_Section_Master WHERE ra.product_id=product_id AND ra.company_id = company_id AND STATUS='Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND TRIM(UPPER(ra.insurance_type_desc))=TRIM(UPPER(section_name)) AND amend_id = ( SELECT MAX(amend_id) FROM Product_Section_Master WHERE ra.product_id=product_id AND ra.company_id = company_id AND STATUS='Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND TRIM(UPPER(ra.insurance_type_desc))=TRIM(UPPER(section_name)))) WHERE ra.company_id=?1 AND ra.product_id=?2 AND ra.typeid=?3 AND ra.request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET insurance_type_id =( SELECT distinct section_id FROM product_section_master WHERE ra.product_id = product_id AND ra.company_id = company_id AND status = 'Y' AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND TRIM(upper(ra.insurance_type_desc)) = TRIM(upper(section_name) ) AND amend_id = ( SELECT MAX(amend_id) FROM product_section_master WHERE ra.product_id = product_id AND ra.company_id = company_id AND status = 'Y' AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND TRIM(upper(ra.insurance_type_desc) ) = TRIM(upper(section_name) ) ) ) WHERE ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4",nativeQuery=true)
	Integer updateInsuranceTypeId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	//@Query(value ="UPDATE Eservice_Motor_Details_raw RA INNER JOIN Eservice_Motor_Details_raw RS ON RA.company_Id = RS.company_Id AND RA.product_Id = RS.product_Id AND RA.typeid = RS.typeid AND RA.request_Reference_No = RS.request_Reference_No AND RA.ROW_NUM=RS.ROW_NUM SET RA.section_Id = RS.insurance_Type_Id WHERE RA.company_Id =?1 AND RA.product_Id =?2 AND RA.typeid =?3 AND RA.request_Reference_No =?4",nativeQuery=true)
	@Query(value ="UPDATE Eservice_Motor_Details_raw RA SET RA.section_Id =(SELECT distinct insurance_Type_Id FROM (SELECT RS.insurance_Type_Id FROM Eservice_Motor_Details_raw RS WHERE RA.company_Id = RS.company_Id AND RA.product_Id = RS.product_Id AND RA.typeid = RS.typeid AND RA.request_Reference_No = RS.request_Reference_No AND RA.ROW_NUM=RS.ROW_NUM)X) WHERE company_Id =?1 AND product_Id =?2 AND typeid =?3 AND request_Reference_No =?4",nativeQuery=true)
	Integer updateSectionIdByRequestRefNo(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	//@Query(value ="UPDATE eservice_motor_details_raw ra SET body_type_id =( SELECT body_id FROM Eway_Motor_Bodytype_Master WHERE TRIM( UPPER(BODY_NAME_EN))= TRIM( UPPER(ra.body_type_desc) ) AND STATUS = 'Y' AND (BRANCH_CODE=ra.BRANCH_CODE OR BRANCH_CODE='99999' ) AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND amend_id =( SELECT MAX(amend_id) FROM Eway_Motor_Bodytype_Master WHERE TRIM(UPPER(BODY_NAME_EN))= TRIM(UPPER(ra.body_type_desc)) AND STATUS = 'Y' AND (BRANCH_CODE=ra.BRANCH_CODE OR BRANCH_CODE='99999') AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id ) LIMIT 1 ) WHERE ra.company_id =?1 AND ra.product_id =?2 AND ra.typeid =?3 AND ra.request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET body_type_id =( SELECT distinct body_id FROM Eway_Motor_Bodytype_Master WHERE TRIM( UPPER(BODY_NAME_EN))= TRIM( UPPER(ra.body_type_desc) ) AND STATUS = 'Y' AND( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND amend_id =( SELECT MAX(amend_id) FROM Eway_Motor_Bodytype_Master WHERE TRIM( UPPER(BODY_NAME_EN) )= TRIM( UPPER(ra.body_type_desc) ) AND STATUS = 'Y' AND ( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id )) WHERE ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4 ",nativeQuery=true)
	Integer updateBodyTypeId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	//@Query(value="UPDATE eservice_motor_details_raw ra SET motor_usage_id =( SELECT vehicle_usage_id FROM Motor_VehicleUsage_master WHERE REPLACE(UPPER(TRIM(VEHICLE_USAGE_DESC)),'\\r\\n','')= REPLACE(UPPER(TRIM(ra.MOTOR_USAGE_DESC)),'\\r\\n','') AND( section_id = ra.section_id OR section_id = '99999') AND ( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND amend_id = ( SELECT MAX(amend_id) FROM Motor_VehicleUsage_master WHERE REPLACE(UPPER(TRIM(VEHICLE_USAGE_DESC)),'\\r\\n','')= REPLACE(UPPER(TRIM(ra.MOTOR_USAGE_DESC)),'\\r\\n','') AND ( section_id = ra.section_id OR section_id = '99999' ) AND ( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id ) LIMIT 1 ) WHERE ra.company_id =?1 AND ra.product_id =?2 AND ra.typeid =?3 AND ra.request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET motor_usage_id =( SELECT distinct vehicle_usage_id FROM Motor_VehicleUsage_master WHERE REPLACE( UPPER( TRIM(VEHICLE_USAGE_DESC)), '\\r\\n', '' )= REPLACE( UPPER( TRIM(ra.MOTOR_USAGE_DESC) ), '\\\\r\\\\n', '' ) AND( section_id = ra.section_id OR section_id = '99999' ) AND( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND STATUS = 'Y' AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND amend_id = ( SELECT MAX(amend_id) FROM Motor_VehicleUsage_master WHERE REPLACE( UPPER( TRIM(VEHICLE_USAGE_DESC) ), '\\\\r\\\\n', '' )= REPLACE( UPPER( TRIM(ra.MOTOR_USAGE_DESC) ), '\\\\r\\\\n', '' ) AND ( section_id = ra.section_id OR section_id = '99999' ) AND ( BRANCH_CODE = ra.BRANCH_CODE OR BRANCH_CODE = '99999' ) AND STATUS = 'Y' AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id )) WHERE ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4",nativeQuery=true)
	Integer updateMotorUsageId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE eservice_motor_details_raw ra SET motor_usage_id=(SELECT DISTINCT vehicle_usage_id FROM Motor_VehicleUsage_master WHERE REPLACE( UPPER( TRIM(VEHICLE_USAGE_DESC)), '\\r\\n', '' )= REPLACE( UPPER( TRIM(ra.MOTOR_USAGE_DESC) ), '\\\\r\\\\n', '' ) AND STATUS = 'Y' AND section_id ='99999' AND amend_id =(SELECT MAX(amend_id) FROM Motor_VehicleUsage_master WHERE REPLACE( UPPER( TRIM(VEHICLE_USAGE_DESC) ), '\\r\\n', '' )= REPLACE( UPPER( TRIM(ra.MOTOR_USAGE_DESC) ), '\\\\r\\\\n', '' ) AND STATUS = 'Y' AND section_id ='99999' )) WHERE ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4",nativeQuery=true)
	Integer updateVehUsageId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	@Modifying
	@Transactional
	//@Query(value="UPDATE eservice_motor_details_raw ra SET INSURANCE_CLASS_ID =( SELECT policy_type_id FROM Policy_Type_Master WHERE TRIM( UPPER(policy_type_name))= TRIM( UPPER(ra.insurance_class_desc) ) AND product_id = ra.product_id AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND AMEND_ID =( SELECT MAX(amend_id) FROM Policy_Type_Master WHERE UPPER(policy_type_name)= UPPER(ra.insurance_class_desc) AND product_id = ra.product_id AND STATUS = 'Y' AND SYSDATE() BETWEEN effective_date_start AND effective_date_end ) ) WHERE ra.company_id =?1 AND ra.product_id =?2 AND ra.typeid =?3 AND ra.request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET INSURANCE_CLASS_ID =( SELECT distinct policy_type_id FROM Policy_Type_Master WHERE TRIM( UPPER(policy_type_name))= TRIM( UPPER(ra.insurance_class_desc) ) AND product_id = ra.product_id AND STATUS = 'Y' AND(SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end AND company_id = ra.company_id AND AMEND_ID =( SELECT MAX(amend_id) FROM Policy_Type_Master WHERE UPPER(policy_type_name)= UPPER(ra.insurance_class_desc) AND product_id = ra.product_id AND STATUS = 'Y' AND (SELECT CURRENT_DATE FROM DUAL) BETWEEN effective_date_start AND effective_date_end )) WHERE ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4",nativeQuery=true)
	Integer updateInsuranceClassId(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	///@Query(value ="UPDATE eservice_motor_details_raw SET error_desc=CONCAT(error_desc,\"\", CASE WHEN(TRIM(UPPER(INSURANCE_TYPE_DESC))=TRIM(UPPER('Comprehensive')) OR TRIM(UPPER(INSURANCE_TYPE_DESC))=TRIM(UPPER('TPFT'))) AND (VEHICLE_SUMINSURED='' OR VEHICLE_SUMINSURED IS NULL OR ACCESSORIES_SUMINSURED='' OR ACCESSORIES_SUMINSURED IS NULL OR WINDSHIELD_SUMINSURED='' OR WINDSHIELD_SUMINSURED IS NULL OR EXTENDED_SUMINSURED='' OR EXTENDED_SUMINSURED IS NULL) THEN '~vehicle or winshield or accessories or tppd suminsured is mandatory for comprehensive or TPFT insurance' ELSE '' END), STATUS=CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id=?1 AND product_id=?2 AND typeid=?3 AND request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw SET error_desc = CONCAT( COALESCE(error_desc, ''), CASE WHEN( TRIM( UPPER(INSURANCE_TYPE_DESC))= TRIM( UPPER('Comprehensive') ) OR TRIM( UPPER(INSURANCE_TYPE_DESC) )= TRIM( UPPER('TPFT') ) ) AND( VEHICLE_SUMINSURED = '' OR VEHICLE_SUMINSURED IS NULL OR ACCESSORIES_SUMINSURED = '' OR ACCESSORIES_SUMINSURED IS NULL OR WINDSHIELD_SUMINSURED = '' OR WINDSHIELD_SUMINSURED IS NULL OR EXTENDED_SUMINSURED = '' OR EXTENDED_SUMINSURED IS NULL ) THEN '~vehicle or winshield or accessories or tppd suminsured is mandatory for comprehensive or TPFT insurance' ELSE error_desc END ), STATUS = CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id = ?1 AND product_id = ?2 AND typeid = ?3 AND request_reference_no = ?4",nativeQuery=true)
	Integer updateSuminsuredValidationByPolicyType(Integer companyId,Integer productId,Integer typeId,String requestRefNo );
	
	
	@Modifying
	@Transactional
	//@Query(value ="UPDATE eservice_motor_details_raw SET error_desc =CONCAT(error_desc,\"\",CASE WHEN TRIM(UPPER(COLLATERAL))=TRIM(UPPER('YES')) AND(BORROWER_TYPE IS NULL OR BORROWER_TYPE='' OR FIRST_LOSS_PAYEE IS NULL OR FIRST_LOSS_PAYEE ='') THEN '~Borrower Type and First loss peyee is mandatory if you selected collateral is YES' ELSE '' END), STATUS =CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id =?1 AND product_id =?2 AND typeid =?3 AND request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw SET error_desc = CONCAT( COALESCE(error_desc, ''), CASE WHEN TRIM( UPPER(COLLATERAL))= TRIM( UPPER('YES') ) AND( BORROWER_TYPE IS NULL OR BORROWER_TYPE = '' OR FIRST_LOSS_PAYEE IS NULL OR FIRST_LOSS_PAYEE = '' ) THEN '~Borrower Type and First loss peyee is mandatory if you selected collateral is YES' ELSE error_desc END ), STATUS = CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id = ?1 AND product_id = ?2 AND typeid = ?3 AND request_reference_no = ?4 ",nativeQuery=true)
	Integer updateCollateralValidation(Integer companyId,Integer productId,Integer typeId,String requestRefNo );

	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNoAndStatusIgnoreCase(Integer companyId,
			Integer productId, String requestRefNo, String status);


	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNo(Integer companyId, Integer productId,
			String requestRefNo);


	@Modifying
	@Transactional
	//@Query(value ="UPDATE eservice_motor_details_raw SET error_desc = CASE WHEN(SECTION_ID IS NULL OR SECTION_ID = '') THEN '~Sectionid not found' WHEN INSURANCE_TYPE_ID IS NULL OR INSURANCE_TYPE_ID = '' THEN '~InsuranceType id not found' WHEN INSURANCE_CLASS_ID IS NULL OR INSURANCE_CLASS_ID = '' THEN '~InsuranceClass id not found' WHEN BODY_TYPE_ID IS NULL OR BODY_TYPE_ID = '' THEN '~BodyType id not found' WHEN MOTOR_USAGE_ID IS NULL OR MOTOR_USAGE_ID = '' THEN '~MotorUsageId not found' ELSE '' END, STATUS = CASE WHEN error_desc IS NOT NULL AND error_desc!='' THEN 'E' ELSE 'Y' END WHERE company_id =?1 AND product_id = ?2 AND typeid =?3 AND request_reference_no =?4",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw SET error_desc = CASE WHEN(motor_usage_id IS NULL) THEN '~motor_usage_id not found' ELSE error_desc END, status =IF(error_desc IS NOT NULL,'E','Y')"
			+ " WHERE company_id = ?1 AND product_id = ?2 AND typeid = ?3 AND request_reference_no = ?4",nativeQuery=true)
	Integer updateMasterIdEmptyValidation(Integer companyId, Integer productId, Integer typeId, String requestReferenceNo);

	@Modifying
	@Transactional
	//@Query(value="UPDATE eservice_motor_details_raw RAW SET STATUS='E', ERROR_DESC=CONCAT(ERROR_DESC,'~DUPLICATE SEARCH BY DATA IS FOUND') WHERE SEARCH_BY_DATA IN(SELECT SEARCH_BY_DATA FROM (SELECT SEARCH_BY_DATA FROM eservice_motor_details_raw WHERE company_id =?1 AND product_id =?2 AND typeid =?3 AND request_reference_no =?4 and status='Y' and tira_status='Y' and (api_status in('Y','') or api_status is null) GROUP BY SEARCH_BY_DATA HAVING COUNT(*)>1)X) AND raw.company_id =?1 AND raw.product_id =?2 AND raw.typeid =?3 AND raw.request_reference_no =?4 and raw.status='Y' and raw.tira_status='Y' and (raw.api_status in('Y','') or raw.api_status is null) ",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET status = 'E', error_desc = concat(COALESCE(error_desc,'~DUPLICATE SEARCH BY DATA IS FOUND')) WHERE search_by_data IN( SELECT search_by_data FROM ( SELECT search_by_data FROM eservice_motor_details_raw WHERE company_id =?1 AND product_id = ?2 AND typeid = ?3 AND request_reference_no = ?4 AND status = 'Y' AND tira_status = 'Y' AND ( api_status IN ( 'Y', '') OR api_status IS NULL ) GROUP BY search_by_data HAVING COUNT(*) > 1 ) x ) AND ra.company_id = ?1 AND ra.product_id = ?2 AND ra.typeid = ?3 AND ra.request_reference_no = ?4 AND ra.status = 'Y' AND ra.tira_status = 'Y' AND ( ra.api_status IN ( 'Y', '' ) OR ra.api_status IS NULL )",nativeQuery=true)
	Integer updateDupicateSearchBydata(Integer companyId,Integer productId,Integer typeId,String refNo);


	Integer deleteByRowNum(Integer rownum);


	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNoAndStatusIgnoreCaseIn(Integer CompanyId,
			Integer productId, String requestReferenceNo, List<String> status);


	EserviceMotorDetailsRaw findByRowNum(Integer companyId);

	
	@Modifying
	@Transactional
	//@Query(value="UPDATE eservice_motor_details_raw RAW SET STATUS='X', ERROR_DESC =concat(ERROR_DESC,'~Data has been overridden') WHERE SEARCH_BY_DATA IN(SELECT SEARCH_BY_DATA FROM ( SELECT SEARCH_BY_DATA FROM eservice_motor_details_raw WHERE TYPEID=?1 AND REQUEST_REFERENCE_NO=?2 AND COMPANY_ID=?3 AND PRODUCT_ID=?4 AND STATUS='Y' GROUP BY SEARCH_BY_DATA)X) AND RAW.TYPEID=?1 AND RAW.REQUEST_REFERENCE_NO=?2 AND RAW.COMPANY_ID=?3 AND RAW.PRODUCT_ID=?4 AND STATUS='E' ",nativeQuery=true)
	@Query(value="UPDATE eservice_motor_details_raw ra SET status = 'X', error_desc = concat(error_desc,'~Data has been overridden') WHERE search_by_data IN( SELECT search_by_data FROM ( SELECT search_by_data FROM eservice_motor_details_raw WHERE typeid =?1 AND request_reference_no =?2 AND company_id =?3 AND product_id = ?4 AND status = 'Y' GROUP BY search_by_data) x ) AND ra.typeid =?1 AND ra.request_reference_no = ?2 AND ra.company_id =?3 AND ra.product_id = ?4 AND status = 'E'",nativeQuery=true)
	Integer overrideExistingErrorRecord(Integer typeId,String refNo,Integer companyId,Integer productId);


	@Query("select raw from EserviceMotorDetailsRaw raw where raw.companyId =:companyId and raw.productId=:productId and raw.requestReferenceNo=:requestReferenceNo and (raw.status='E' or raw.tiraStatus ='E')")
	List<EserviceMotorDetailsRaw> getErrorRecordsByRefNo(@Param("companyId")
			Integer companyId,@Param("productId") Integer productId, @Param("requestReferenceNo")String requestRefNo);


	List<EserviceMotorDetailsRaw> findByCompanyIdAndProductIdAndRequestReferenceNoAndStatusIgnoreCaseInAndApiStatusIsNull(
			Integer companyId, Integer productId, String requestReferenceNo, List<String> status);

	@Transactional
	void deleteByRequestReferenceNo(String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query(value="UPDATE eservice_motor_details_raw SET error_desc = CASE WHEN( section_id IS NULL OR section_id = '') THEN '~Sectionid not found' WHEN insurance_type_id IS NULL OR insurance_type_id = '' THEN '~InsuranceType id not found' WHEN insurance_class_id IS NULL OR insurance_class_id = '' THEN '~InsuranceClass id not found' WHEN body_type_id IS NULL OR body_type_id = '' THEN '~BodyType id not found' WHEN motor_usage_id IS NULL OR motor_usage_id = '' THEN '~MotorUsageId not found' ELSE error_desc END WHERE company_id =?1 AND product_id =?2 AND typeid =?3 AND request_reference_no =?4" ,nativeQuery=true)
	Integer updateEmptyErrorDesc(Integer companyId, Integer productId, Integer typeId, String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query(value="UPDATE eservice_motor_details_raw SET STATUS = CASE WHEN   error_desc != '' OR error_desc IS NOT NULL THEN 'E' ELSE 'Y' END WHERE company_id =?1 AND product_id =?2 AND typeid = ?3 AND request_reference_no = ?4" ,nativeQuery=true)
	Integer updateEmptyErrorStatus(Integer companyId, Integer productId, Integer typeId, String requestReferenceNo);


	@Modifying
	@Transactional
	@Query("delete from EserviceMotorDetails  em where em.requestReferenceNo=?1")
	Integer deleteMotorDetailsByRefNo(String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query("delete from FactorRateRequestDetails f where f.requestReferenceNo=?1")
	Integer deleteFactorByRefNo(String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query(value="DELETE FROM master_referral_details WHERE REQUEST_REFERENCE_NO=?1",nativeQuery=true)
	Integer deleteMaster_referral_detailsByRefNo(String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query("delete from UwQuestionsDetails u where u.requestReferenceNo=?1")
	Integer deleteUwQuestionsDetailsByRefNo(String requestReferenceNo);
	
	@Modifying
	@Transactional
	@Query("delete from ProductEmployeeDetails p where p.requestReferenceNo=?1 and p.sectionId=?2")
	Integer deleteProductEmployeeDetails(String requestReferenceNo,String sectionId);
	
	
	@Modifying
	@Transactional
	@Query(value="delete from EwayEmplyeeDetailRaw r where r.requestReferenceNo=:requestReferenceNo and r.sectionId=:sectionId")
	Integer deleteRawEmployeeDetails(@Param("requestReferenceNo") String reNo,@Param("sectionId") String sectionId);


	@Modifying
	@Transactional
	@Query(value="DELETE FROM Travel_Passenger_Details WHERE REQUEST_REFERENCE_NO=:refNo and SECTION_ID=:sectionId",nativeQuery=true)
	Integer deletePassengerDetails(@Param("refNo")String requestReferenceNo,@Param("sectionId")String sectionId);


	@Modifying
	@Transactional
	@Query(value="delete from EwayEmplyeeDetailRaw r where r.requestReferenceNo=:requestReferenceNo and r.status=:status")
	Integer deleteByRequestReferenceNo(@Param("requestReferenceNo")String requestReferenceNo, @Param("status")String status);

	
	@Modifying
	@Transactional
	@Query(value="delete from UgandaVehicleDetailsRaw uga where uga.requestReferenceNo=:requestReferenceNo")
	Integer deleteUgandaVehicleDetails(@Param("requestReferenceNo")String requestReferenceNo);

	
	@Modifying
	@Transactional
	@Query(nativeQuery=true,value="DELETE FROM eservice_motor_details WHERE request_reference_no=(SELECT eway_Reference_no FROM uganda_vehicle_details_raw WHERE request_reference_no=?1 AND eway_Reference_no IS NOT NULL LIMIT 1)")
	Integer deleteUgandaVehicleDetailsFromMainTable(String requestReferenceNo);


	@Modifying
	@Transactional
	@Query(nativeQuery=true,value="UPDATE eservice_motor_details_raw MOT SET MOTOR_CATEGORY_ID =(SELECT ITEM_CODE FROM EWAY_LIST_ITEM_VALUE WHERE COMPANY_ID=MOT.COMPANY_ID AND STATUS='Y' AND SYSDATE() BETWEEN EFFECTIVE_DATE_START AND EFFECTIVE_DATE_END AND ITEM_TYPE='MOTOR_CATEGORY' AND UPPER(TRIM(REPLACE(ITEM_VALUE,'\\n','')))=UPPER(TRIM(REPLACE(MOT.MOTOR_CATEGORY,'\\n','')))) WHERE REQUEST_REFERENCE_NO=?1 AND COMPANY_ID=?2")
	Integer updateMotorCatgeoryId(String requestReferenceNo,Integer companyId);


	@Modifying
	@Transactional
	@Query(nativeQuery=true,value="UPDATE eservice_motor_details_raw mot SET bank_id=(SELECT bank_code FROM eway_bank_master WHERE COMPANY_ID =?1 AND TRIM(UPPER(BANK_FULL_NAME))= TRIM(UPPER(mot.COLLATERAL_BANKNAME)) AND STATUS ='Y' AND SYSDATE() BETWEEN EFFECTIVE_DATE_START AND EFFECTIVE_DATE_END) WHERE REQUEST_REFERENCE_NO=?2 AND COMPANY_ID=?1")
	Integer updateBankCode(Integer companyId, String requestReferenceNo);
	
	Integer countByRequestReferenceNoAndStatusNot(String request_ref_no,String status);

	@Query(nativeQuery=true,value="SELECT ITEM_CODE,ITEM_VALUE FROM EWAY_LIST_ITEM_VALUE WHERE COMPANY_ID=?1 AND STATUS='Y' AND "
			+ "SYSDATE() BETWEEN EFFECTIVE_DATE_START AND EFFECTIVE_DATE_END AND ITEM_TYPE='MOTOR_CATEGORY'")
	List<Map<String, String>> getMotorCategory(String companyId);

	@Query(nativeQuery=true,value="SELECT SECTION_ID,SECTION_NAME FROM Product_Section_Master WHERE company_id=?1 AND product_id=?2 "
			+ "AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String, String>> getSections(String companyId,String productId);

	@Query(nativeQuery=true,value="SELECT BODY_ID,BODY_NAME_EN FROM eway_motor_bodytype_master WHERE company_id=?1 "
			+ "AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String, String>> getBodyTypes(String companyId);

	@Query(nativeQuery=true,value="SELECT BANK_CODE,BANK_FULL_NAME FROM eway_bank_master WHERE company_id=?1 "
			+ "AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String, String>> getBanktypes(String companyId);

	@Query(nativeQuery=true,value="SELECT VEHICLE_USAGE_ID,VEHICLE_USAGE_DESC FROM motor_vehicleusage_master WHERE company_id=?1 "
			+ "AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String, String>> getVehicleUsage(String companyId);

	@Query(nativeQuery=true,value="SELECT POLICY_TYPE_ID,POLICY_TYPE_NAME FROM Policy_Type_Master WHERE company_id=?1 AND product_id=?2 "
			+ "AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String, String>> getPolicyTypes(String companyId,String productId);
	
	@Query(nativeQuery=true,value="SELECT COLOR_ID,COLOR_DESC FROM motor_color_master WHERE company_id=?1 AND STATUS='Y' AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end")
	List<Map<String, String>> getColorTypes(String companyId);
		
	@Query(nativeQuery=true,value="SELECT SECTION_ID AS INDUSTRY_TYPE_ID,SECTION_NAME AS INDUSTRY_TYPE_DESC FROM insurance_type_master WHERE company_id=?1 AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y' ")
	List<Map<String,String>> getSanlamInsuranceTypeClass(String companyId);
	
	@Query(nativeQuery=true,value="SELECT ITEM_CODE,ITEM_VALUE FROM eway_list_item_value WHERE company_id=?1 AND item_type='DEDUCTIBLE' AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String,String>> getSanlamDeductibles(String companyId);
	
	@Query(nativeQuery=true,value="SELECT ITEM_CODE,ITEM_VALUE FROM eway_list_item_value WHERE company_id=?1 AND item_type='AGGREGATED_VALUE' AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y' ")
	List<Map<String,String>> getSanlamAggregatorValue(String companyId);
	
	@Query(nativeQuery=true,value="SELECT ITEM_CODE,ITEM_VALUE FROM eway_list_item_value WHERE company_id=?1 AND item_type='MUNICIPALITY_TRAFFIC' AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y' ")
	List<Map<String,String>> getSanlamMuniTraff(String companyId);
	
	@Query(nativeQuery=true,value="SELECT ITEM_CODE,ITEM_VALUE FROM eway_list_item_value WHERE company_id=?1 AND item_type='VEHICLE_VALUE_TYPE' AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y' ")
	List<Map<String,String>> getSanlamVehValue(String companyId);
	
	@Query(nativeQuery=true,value="SELECT MAKE_ID,MODEL_ID,MODEL_NAME_EN FROM eway_motor_makemodel_master WHERE company_id=?1 AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y'")
	List<Map<String,String>> getModelList(String companyId);
	
	@Query(nativeQuery=true,value="SELECT MAKE_ID,MAKE_NAME_EN FROM eway_motor_make_master WHERE company_id=?1 AND CURRENT_DATE BETWEEN effective_date_start AND effective_date_end AND STATUS='Y' ")
	List<Map<String,String>> getMakeList(String companyId);
	
}

	



